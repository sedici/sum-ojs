#!/bin/bash

source .env

while getopts j:d:p:o:f:t: flag
do
   echo $flag;
    case "${flag}" in
        j) PROJECT_NAME=${OPTARG};;
        d) DATABASE_NAME=${OPTARG};;
        p) ROOT_PASSWORD=${OPTARG};;
	o) OPERATION=${OPTARG};;
	f) FROM_VERSION=${OPTARG};;
	t) TO_VERSION=${OPTARG};;
    esac
done
echo "Project name: $PROJECT_NAME";
echo "Database name: $DATABASE_NAME";
echo "Password for root user: $ROOT_PASSWORD";
echo "Command $OPERATION";
echo "Going from version ${FROM_VERSION} to version ${TO_VERSION}";

DIR="./from${FROM_VERSION}-to-${TO_VERSION}"

docker-run() {
  echo "Running docker containers"
  docker compose -f $DIR/docker-compose.yml up
}

docker-down() {
  echo "Stopping docker containers"
  docker compose -f $DIR/docker-compose.yml down
}

regenerate() {
  echo "Dropping database ${PROJECT_NAME}"
  docker exec -it ${PROJECT_NAME}_mysql  mysqladmin drop ${DATABASE_NAME} -uroot -p${ROOT_PASSWORD}

  echo "Creating database ${PROJECT_NAME}"
  docker exec -it ${PROJECT_NAME}_mysql mysqladmin create ${DATABASE_NAME} -uroot -p${ROOT_PASSWORD}

  echo "Loading dump file ${DUMP_DIR}/${DUMP_FILE} into database ${DATABASE_NAME}"
  docker exec -w ${DUMP_DIR} -it ${PROJECT_NAME}_mysql sh -c "cd ${DUMP_DIR} && mysql -uroot -p${ROOT_PASSWORD} ${DATABASE_NAME} < ./${DUMP_FILE}"

  echo "Running extra queries from ${DUMP_DIR}/${POST_DUMP_FILE} file into database ${DATABASE_NAME}"
  docker exec -w ${DUMP_DIR} -it ${PROJECT_NAME}_mysql sh -c "cd ${DUMP_DIR} && mysql -uroot -p${ROOT_PASSWORD} ${DATABASE_NAME} < ./${POST_DUMP_FILE}"

  echo "Database ${DATABASE_NAME} has been recreated. All done."

}


upgrade() {
    echo "Running upgrade from OJS ${FROM_VERSION} to OJS ${TO_VERSION} for ${PROJECT_NAME}..."
    docker exec -it ${PROJECT_NAME}_web sh -c "cd /app && php tools/upgrade.php upgrade" 
}


case "${OPERATION}" in
	regenerate) regenerate;;
	upgrade)     upgrade;;
	up) docker-run;;
	down) docker-down;;
esac
